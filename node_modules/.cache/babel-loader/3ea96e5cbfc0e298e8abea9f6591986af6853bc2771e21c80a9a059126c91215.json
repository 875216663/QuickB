{"ast":null,"code":"var _jsxFileName = \"/Users/caofei/Documents/GitHub/quickbase/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [label, setLabel] = useState(\"\");\n  const [type, setType] = useState(\"Multi-select\");\n  const [isRequired, setIsRequired] = useState(false);\n  const [defaultValue, setDefaultValue] = useState(\"Asia\");\n  const [choices, setChoices] = useState([]);\n  const [order, setOrder] = useState(\"Display choices in Alphabetical\");\n  const [selectedLine, setSelectedLine] = useState(null);\n\n  //处理排序\n  const handleSort = e => {\n    //触发事件的元素（比如一个下拉菜单或输入框）的当前值\n    const selectedOrder = e.target.value;\n    setOrder(selectedOrder);\n\n    //This line sorts the choices array based on the value property of each object, \n    //and then updates the state of choices to this newly sorted array using the setChoices function.\n    //先按照字母顺序排序，再按照时间顺序排序\n    //localeCompare() 方法返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。\n    if (selectedOrder === \"Display choices in Alphabetical\") {\n      setChoices(choices.sort((a, b) => a.value.localeCompare(b.value)));\n    } else if (selectedOrder === \"Display choices in Time\") {\n      setChoices(choices.sort((a, b) => a.time - b.time));\n    }\n    return choices;\n  };\n\n  //处理提交\n  //The handleSubmit function is an asynchronous function that is triggered when the form is submitted.\n  const handleSubmit = async e => {\n    //async function。async函数返回一个promise对象\n    e.preventDefault(); //阻止默认事件，防止页面刷新\n    const formData = {\n      label: label,\n      type: type,\n      isRequired: isRequired,\n      defaultValue: defaultValue,\n      choices: choices,\n      order: order\n    };\n    console.log(\"Submitted Data:\", formData);\n    try {\n      const response = await axios.post(\"http://www.mocky.io/v2/566061f21200008e3aabd919\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"API Response:\", response.data);\n    } catch (error) {\n      console.error(\"Error submitting the form:\", error);\n    }\n  };\n\n  //处理重置,清空表单\n  const handleFormReset = e => {\n    e.preventDefault();\n    setLabel(\"\");\n    setType(\"Multi-select\");\n    setIsRequired(false);\n    setDefaultValue(\"\");\n    setChoices([]);\n    setOrder(\"Display choices in Alphabetical\");\n    setSelectedLine(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"field-builder\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Field Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Label\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: label\n        //The onChange event handler is triggered when the value of the input field changes.\n        ,\n        onChange: e => setLabel(e.target.value)\n        //The onKeyDown event handler is triggered when a key is pressed.\n        ,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n          }\n        },\n        required: true //required属性规定必需在提交之前填写输入字段\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Type\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: type,\n        onChange: e => setType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Multi-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Single-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n        //The checked attribute is a boolean attribute.\n        ,\n        checked: isRequired,\n        onChange: () => setIsRequired(!isRequired)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \"A value is required\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Default Value\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: defaultValue,\n        onChange: e => setDefaultValue(e.target.value),\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            //The trim() method removes whitespace from both ends of a string.\n            const trimmedValue = defaultValue.trim();\n            if (trimmedValue !== \"\") {\n              if (!choices.map(each => each.value).includes(trimmedValue)) {\n                //The setChoices function is used to update the state of the choices array.\n                setChoices(prevChoices => [...prevChoices, {\n                  value: trimmedValue,\n                  time: new Date()\n                }]);\n                setDefaultValue(\"\");\n              } else {\n                alert(\"cannot add exiting choice\");\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Choices\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: choices.map(each => each.value).join(\"\\n\"),\n        rows: 6,\n        readOnly: true\n        //The onClick event handler is triggered when the user clicks on the textarea.\n        ,\n        onClick: e => {\n          const cursorPosition = e.target.selectionStart;\n          const lines = e.target.value.substr(0, cursorPosition).split(\"\\n\");\n          const lineNumber = lines.length - 1;\n          setSelectedLine(lineNumber);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        if (selectedLine !== null) {\n          const newChoices = [...choices];\n          newChoices.splice(selectedLine, 1);\n          setChoices(newChoices);\n          setSelectedLine(null);\n        }\n      },\n      children: \"Delete Selected Choice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Order\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: order,\n        onChange: handleSort,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Display choices in Alphabetical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Display choices in Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleFormReset,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NsyQmbbxPHTI4kStiq8SGe8LzuU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","label","setLabel","type","setType","isRequired","setIsRequired","defaultValue","setDefaultValue","choices","setChoices","order","setOrder","selectedLine","setSelectedLine","handleSort","e","selectedOrder","target","value","sort","a","b","localeCompare","time","handleSubmit","preventDefault","formData","console","log","response","post","headers","data","error","handleFormReset","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyDown","key","required","checked","trimmedValue","trim","map","each","includes","prevChoices","Date","alert","join","rows","readOnly","onClick","cursorPosition","selectionStart","lines","substr","split","length","newChoices","splice","_c","$RefreshReg$"],"sources":["/Users/caofei/Documents/GitHub/quickbase/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [label, setLabel] = useState(\"\");\n  const [type, setType] = useState(\"Multi-select\");\n  const [isRequired, setIsRequired] = useState(false);\n  const [defaultValue, setDefaultValue] = useState(\"Asia\");\n  const [choices, setChoices] = useState([]);\n  const [order, setOrder] = useState(\"Display choices in Alphabetical\");\n  const [selectedLine, setSelectedLine] = useState(null);\n\n  //处理排序\n  const handleSort = (e) => {\n    //触发事件的元素（比如一个下拉菜单或输入框）的当前值\n    const selectedOrder = e.target.value;\n    setOrder(selectedOrder);\n\n    //This line sorts the choices array based on the value property of each object, \n    //and then updates the state of choices to this newly sorted array using the setChoices function.\n    //先按照字母顺序排序，再按照时间顺序排序\n    //localeCompare() 方法返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。\n    if (selectedOrder === \"Display choices in Alphabetical\") {\n      setChoices(choices.sort((a, b) => a.value.localeCompare(b.value)));\n    } else if (selectedOrder === \"Display choices in Time\") {\n      setChoices(choices.sort((a, b) => a.time - b.time));\n    }\n    return choices;\n  };\n\n  //处理提交\n  //The handleSubmit function is an asynchronous function that is triggered when the form is submitted.\n  const handleSubmit = async (e) => { //async function。async函数返回一个promise对象\n    e.preventDefault();//阻止默认事件，防止页面刷新\n    const formData = {\n      label: label,\n      type: type,\n      isRequired: isRequired,\n      defaultValue: defaultValue,\n      choices: choices,\n      order: order,\n    };\n    console.log(\"Submitted Data:\", formData); \n    try {\n      const response = await axios.post(\n        \"http://www.mocky.io/v2/566061f21200008e3aabd919\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      console.log(\"API Response:\", response.data);\n    } catch (error) {\n      console.error(\"Error submitting the form:\", error);\n    }\n    \n  };\n\n  //处理重置,清空表单\n  const handleFormReset = (e) => {\n    e.preventDefault();\n    setLabel(\"\");\n    setType(\"Multi-select\");\n    setIsRequired(false);\n    setDefaultValue(\"\");\n    setChoices([]);\n    setOrder(\"Display choices in Alphabetical\");\n    setSelectedLine(null);\n  };\n\n\n  return (\n    <form className=\"field-builder\" onSubmit={handleSubmit}>\n      <h1>Field Builder</h1>\n\n      <label>\n        Label\n        <input\n          type=\"text\"\n          value={label}\n          //The onChange event handler is triggered when the value of the input field changes.\n          onChange={(e) => setLabel(e.target.value)}\n          //The onKeyDown event handler is triggered when a key is pressed.\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n            }\n          }}\n          required //required属性规定必需在提交之前填写输入字段\n        />\n      </label>\n\n\n      <label>\n        Type\n        <select value={type} onChange={(e) => setType(e.target.value)}>\n          <option>Multi-select</option>\n          <option>Single-select</option>\n        </select>\n        <input\n          type=\"checkbox\"\n          //The checked attribute is a boolean attribute.\n          checked={isRequired}\n          onChange={() => setIsRequired(!isRequired)}\n        />\n        A value is required\n      </label>\n\n\n      <label>\n        Default Value\n        <input\n          type=\"text\"\n          value={defaultValue}\n          onChange={(e) => setDefaultValue(e.target.value)}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              e.preventDefault();\n              //The trim() method removes whitespace from both ends of a string.\n              const trimmedValue = defaultValue.trim();\n              if (trimmedValue !== \"\") {\n                if (!choices.map((each) => each.value).includes(trimmedValue)) {\n                  //The setChoices function is used to update the state of the choices array.\n                  setChoices((prevChoices) => [\n                    ...prevChoices,\n                    { value: trimmedValue, time: new Date() },\n                  ]);\n                  setDefaultValue(\"\");\n                } else {\n                  alert(\"cannot add exiting choice\");\n                }\n              }\n            }\n          }}\n        />\n      </label>\n\n      <label>\n        Choices\n        <textarea\n          value={choices.map((each) => each.value).join(\"\\n\")}\n          rows={6}\n          readOnly\n          //The onClick event handler is triggered when the user clicks on the textarea.\n          onClick={(e) => {\n            const cursorPosition = e.target.selectionStart;\n            const lines = e.target.value.substr(0, cursorPosition).split(\"\\n\");\n            const lineNumber = lines.length - 1;\n            setSelectedLine(lineNumber);\n          }}\n        />\n      </label>\n      <button\n        type=\"button\"\n        onClick={() => {\n          if (selectedLine !== null) {\n            const newChoices = [...choices];\n            newChoices.splice(selectedLine, 1);\n            setChoices(newChoices);\n            setSelectedLine(null);\n          }\n        }}\n      >\n        Delete Selected Choice\n      </button>\n\n      <br></br>\n      <br></br>\n      <label>\n        Order\n        <select value={order} onChange={handleSort}>\n          <option>Display choices in Alphabetical</option>\n          <option>Display choices in Time</option>\n        </select>\n      </label>\n\n      <button type=\"submit\">Save changes</button>\n      <button type=\"button\" onClick={handleFormReset}>\n        Cancel\n      </button>\n    </form>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}