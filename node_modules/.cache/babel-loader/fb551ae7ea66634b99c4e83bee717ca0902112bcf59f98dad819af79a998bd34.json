{"ast":null,"code":"var _jsxFileName = \"/Users/caofei/Documents/GitHub/-/src/components/ChoicesArea/ChoicesArea.js\";\nimport React from 'react';\nimport Button from '@mui/material/Button';\nimport './ChoicesArea.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChoicesArea({\n  choices,\n  setChoices,\n  selectedLine,\n  setSelectedLine\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"choices-area-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"choices-label\",\n      children: \"Choices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightPart\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: `choices-textarea `,\n        value: choices.map(each => each.value).join(\"\\n\"),\n        rows: 10,\n        readOnly: true,\n        onClick: e => {\n          const cursorPosition = e.target.selectionStart;\n          const lines = e.target.value.substr(0, cursorPosition).split(\"\\n\");\n          const lineNumber = lines.length - 1;\n          setSelectedLine(lineNumber);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"choices-button\",\n        variant: \"outlined\",\n        type: \"button\",\n        onClick: () => {\n          if (selectedLine !== null) {\n            const newChoices = [...choices];\n            newChoices.splice(selectedLine, 1); //Remove elements from the choices array\n            setChoices(newChoices);\n            setSelectedLine(null);\n          }\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = ChoicesArea;\nexport default ChoicesArea;\nvar _c;\n$RefreshReg$(_c, \"ChoicesArea\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","ChoicesArea","choices","setChoices","selectedLine","setSelectedLine","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","map","each","join","rows","readOnly","onClick","e","cursorPosition","target","selectionStart","lines","substr","split","length","variant","type","newChoices","splice","_c","$RefreshReg$"],"sources":["/Users/caofei/Documents/GitHub/-/src/components/ChoicesArea/ChoicesArea.js"],"sourcesContent":["import React from 'react';\nimport Button from '@mui/material/Button';\nimport './ChoicesArea.css'; // Import the CSS file\n\nfunction ChoicesArea({ choices, setChoices, selectedLine, setSelectedLine }) {\n  return (\n    <div className=\"choices-area-container\">\n      <label className=\"choices-label\">Choices</label>\n      <div className='rightPart'>\n      <textarea\n        className={`choices-textarea `}\n        value={choices.map((each) => each.value).join(\"\\n\")}\n        rows={10}\n        readOnly\n        onClick={(e) => {\n          const cursorPosition = e.target.selectionStart; \n          const lines = e.target.value.substr(0, cursorPosition).split(\"\\n\"); \n          const lineNumber = lines.length - 1;\n          setSelectedLine(lineNumber);\n        }}\n      />\n      <Button\n        className=\"choices-button\"\n        variant=\"outlined\"\n        type=\"button\"\n        onClick={() => {\n          if (selectedLine !== null) {\n            const newChoices = [...choices];\n            newChoices.splice(selectedLine, 1);//Remove elements from the choices array\n            setChoices(newChoices);\n            setSelectedLine(null);  \n          }\n        }}\n      >\n        Delete\n      </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChoicesArea;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,WAAWA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC,YAAY;EAAEC;AAAgB,CAAC,EAAE;EAC3E,oBACEL,OAAA;IAAKM,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCP,OAAA;MAAOM,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAChDX,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBAC1BP,OAAA;QACEM,SAAS,EAAG,mBAAmB;QAC/BM,KAAK,EAAEV,OAAO,CAACW,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACF,KAAK,CAAC,CAACG,IAAI,CAAC,IAAI,CAAE;QACpDC,IAAI,EAAE,EAAG;QACTC,QAAQ;QACRC,OAAO,EAAGC,CAAC,IAAK;UACd,MAAMC,cAAc,GAAGD,CAAC,CAACE,MAAM,CAACC,cAAc;UAC9C,MAAMC,KAAK,GAAGJ,CAAC,CAACE,MAAM,CAACT,KAAK,CAACY,MAAM,CAAC,CAAC,EAAEJ,cAAc,CAAC,CAACK,KAAK,CAAC,IAAI,CAAC;UAClE,MAAMf,UAAU,GAAGa,KAAK,CAACG,MAAM,GAAG,CAAC;UACnCrB,eAAe,CAACK,UAAU,CAAC;QAC7B;MAAE;QAAAF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFX,OAAA,CAACF,MAAM;QACLQ,SAAS,EAAC,gBAAgB;QAC1BqB,OAAO,EAAC,UAAU;QAClBC,IAAI,EAAC,QAAQ;QACbV,OAAO,EAAEA,CAAA,KAAM;UACb,IAAId,YAAY,KAAK,IAAI,EAAE;YACzB,MAAMyB,UAAU,GAAG,CAAC,GAAG3B,OAAO,CAAC;YAC/B2B,UAAU,CAACC,MAAM,CAAC1B,YAAY,EAAE,CAAC,CAAC,CAAC;YACnCD,UAAU,CAAC0B,UAAU,CAAC;YACtBxB,eAAe,CAAC,IAAI,CAAC;UACvB;QACF,CAAE;QAAAE,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACoB,EAAA,GAnCQ9B,WAAW;AAqCpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}