{"ast":null,"code":"var _jsxFileName = \"/Users/caofei/Documents/GitHub/-/quickbase/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport LabelInput from './components/Label/LabelInput';\nimport TypeSelect from './components/TypeSelect/TypeSelect';\nimport DefaultValueInput from './components/DefaultValueInput/DefaultValueInput';\nimport ChoicesArea from './components/ChoicesArea';\nimport OrderSelect from './components/OrderSelect';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [label, setLabel] = useState(\"\");\n  const [type, setType] = useState(\"Multi-select\");\n  const [isRequired, setIsRequired] = useState(false);\n  const [defaultValue, setDefaultValue] = useState(\"Asia\");\n  const [choices, setChoices] = useState([]);\n  const [order, setOrder] = useState(\"Display choices in Alphabetical\");\n  const [selectedLine, setSelectedLine] = useState(null);\n\n  //处理排序\n  const handleSort = e => {\n    //触发事件的元素（比如一个下拉菜单或输入框）的当前值\n    const selectedOrder = e.target.value;\n    setOrder(selectedOrder);\n\n    //This line sorts the choices array based on the value property of each object, \n    //and then updates the state of choices to this newly sorted array using the setChoices function.\n    //先按照字母顺序排序，再按照时间顺序排序\n    //localeCompare() 方法返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。\n    if (selectedOrder === \"Display choices in Alphabetical\") {\n      setChoices(choices.sort((a, b) => a.value.localeCompare(b.value)));\n    } else if (selectedOrder === \"Display choices in Time\") {\n      setChoices(choices.sort((a, b) => a.time - b.time));\n    }\n    return choices;\n  };\n\n  //处理提交\n  //The handleSubmit function is an asynchronous function that is triggered when the form is submitted.\n  const handleSubmit = async e => {\n    //async function。async函数返回一个promise对象\n    e.preventDefault(); //阻止默认事件，防止页面刷新\n    const formData = {\n      label: label,\n      type: type,\n      isRequired: isRequired,\n      defaultValue: defaultValue,\n      choices: choices,\n      order: order\n    };\n    console.log(\"Submitted Data:\", formData);\n    try {\n      const response = await axios.post(\"http://www.mocky.io/v2/566061f21200008e3aabd919\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"API Response:\", response.data);\n    } catch (error) {\n      console.error(\"Error submitting the form:\", error);\n    }\n  };\n\n  //处理重置,清空表单\n  const handleFormReset = e => {\n    e.preventDefault();\n    setLabel(\"\");\n    setType(\"Multi-select\");\n    setIsRequired(false);\n    setDefaultValue(\"\");\n    setChoices([]);\n    setOrder(\"Display choices in Alphabetical\");\n    setSelectedLine(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"field-builder\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"field-builder-title\",\n      children: \"Field Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LabelInput, {\n      label: label,\n      setLabel: setLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TypeSelect, {\n      type: type,\n      setType: setType,\n      isRequired: isRequired,\n      setIsRequired: setIsRequired\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DefaultValueInput, {\n      defaultValue: defaultValue,\n      setDefaultValue: setDefaultValue,\n      setChoices: setChoices,\n      choices: choices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChoicesArea, {\n      choices: choices,\n      setChoices: setChoices,\n      selectedLine: selectedLine,\n      setSelectedLine: setSelectedLine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderSelect, {\n      order: order,\n      handleSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        children: \"Save changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        type: \"button\",\n        onClick: handleFormReset,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NsyQmbbxPHTI4kStiq8SGe8LzuU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","LabelInput","TypeSelect","DefaultValueInput","ChoicesArea","OrderSelect","Button","jsxDEV","_jsxDEV","App","_s","label","setLabel","type","setType","isRequired","setIsRequired","defaultValue","setDefaultValue","choices","setChoices","order","setOrder","selectedLine","setSelectedLine","handleSort","e","selectedOrder","target","value","sort","a","b","localeCompare","time","handleSubmit","preventDefault","formData","console","log","response","post","headers","data","error","handleFormReset","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/caofei/Documents/GitHub/-/quickbase/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport LabelInput from './components/Label/LabelInput';\nimport TypeSelect from './components/TypeSelect/TypeSelect';\nimport DefaultValueInput from './components/DefaultValueInput/DefaultValueInput';\nimport ChoicesArea from './components/ChoicesArea';\nimport OrderSelect from './components/OrderSelect';\nimport Button from '@mui/material/Button';\n\nfunction App() {\n  const [label, setLabel] = useState(\"\");\n  const [type, setType] = useState(\"Multi-select\");\n  const [isRequired, setIsRequired] = useState(false);\n  const [defaultValue, setDefaultValue] = useState(\"Asia\");\n  const [choices, setChoices] = useState([]);\n  const [order, setOrder] = useState(\"Display choices in Alphabetical\");\n  const [selectedLine, setSelectedLine] = useState(null);\n\n  //处理排序\n  const handleSort = (e) => {\n    //触发事件的元素（比如一个下拉菜单或输入框）的当前值\n    const selectedOrder = e.target.value;\n    setOrder(selectedOrder);\n\n    //This line sorts the choices array based on the value property of each object, \n    //and then updates the state of choices to this newly sorted array using the setChoices function.\n    //先按照字母顺序排序，再按照时间顺序排序\n    //localeCompare() 方法返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。\n    if (selectedOrder === \"Display choices in Alphabetical\") {\n      setChoices(choices.sort((a, b) => a.value.localeCompare(b.value)));\n    } else if (selectedOrder === \"Display choices in Time\") {\n      setChoices(choices.sort((a, b) => a.time - b.time));\n    }\n    return choices;\n  };\n\n  //处理提交\n  //The handleSubmit function is an asynchronous function that is triggered when the form is submitted.\n  const handleSubmit = async (e) => { //async function。async函数返回一个promise对象\n    e.preventDefault();//阻止默认事件，防止页面刷新\n    const formData = {\n      label: label,\n      type: type,\n      isRequired: isRequired,\n      defaultValue: defaultValue,\n      choices: choices,\n      order: order,\n    };\n    console.log(\"Submitted Data:\", formData); \n    try {\n      const response = await axios.post(\n        \"http://www.mocky.io/v2/566061f21200008e3aabd919\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      console.log(\"API Response:\", response.data);\n    } catch (error) {\n      console.error(\"Error submitting the form:\", error);\n    }\n    \n  };\n\n  //处理重置,清空表单\n  const handleFormReset = (e) => {\n    e.preventDefault();\n    setLabel(\"\");\n    setType(\"Multi-select\");\n    setIsRequired(false);\n    setDefaultValue(\"\");\n    setChoices([]);\n    setOrder(\"Display choices in Alphabetical\");\n    setSelectedLine(null);\n  };\n\n\n  return (\n    <form className=\"field-builder\" onSubmit={handleSubmit}>\n      <h1 className=\"field-builder-title\">Field Builder</h1>\n\n      <LabelInput label={label} setLabel={setLabel} />\n      <TypeSelect type={type} setType={setType} isRequired={isRequired} setIsRequired={setIsRequired} />\n      <DefaultValueInput defaultValue={defaultValue} setDefaultValue={setDefaultValue} setChoices={setChoices} choices={choices} />\n      <ChoicesArea choices={choices} setChoices={setChoices} selectedLine={selectedLine} setSelectedLine={setSelectedLine} />\n      <OrderSelect order={order} handleSort={handleSort} />\n\n      <div className=\"button-group\">\n        <Button variant=\"contained\" type=\"submit\">Save changes</Button>\n        <Button variant=\"text\" type=\"button\" onClick={handleFormReset}>\n          Cancel\n        </Button>\n      </div>\n\n\n    </form>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}