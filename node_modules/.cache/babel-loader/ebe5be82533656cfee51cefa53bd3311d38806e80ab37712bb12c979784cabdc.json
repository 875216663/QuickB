{"ast":null,"code":"var _jsxFileName = \"/Users/caofei/Documents/GitHub/quickbase/src/components/TypeSelect.js\";\nimport React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TypeSelect({\n  type,\n  setType,\n  isRequired,\n  setIsRequired\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"type-select-label\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"type-select-label\",\n        id: \"type-select\",\n        value: type,\n        label: \"Type\",\n        onChange: e => setType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Multi-select\",\n          children: \"Multi-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Single-select\",\n          children: \"Single-select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: isRequired,\n        onChange: () => setIsRequired(!isRequired)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this),\n      label: \"A value is required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = TypeSelect;\nexport default TypeSelect;\nvar _c;\n$RefreshReg$(_c, \"TypeSelect\");","map":{"version":3,"names":["React","FormControl","InputLabel","Select","MenuItem","Checkbox","FormControlLabel","TextField","jsxDEV","_jsxDEV","TypeSelect","type","setType","isRequired","setIsRequired","children","fullWidth","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","value","label","onChange","e","target","control","checked","_c","$RefreshReg$"],"sources":["/Users/caofei/Documents/GitHub/quickbase/src/components/TypeSelect.js"],"sourcesContent":["import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\n\nfunction TypeSelect({ type, setType, isRequired, setIsRequired }) {\n  return (\n    <div>\n      <FormControl fullWidth>\n        <InputLabel id=\"type-select-label\">Type</InputLabel>\n        <Select\n          labelId=\"type-select-label\"\n          id=\"type-select\"\n          value={type}\n          label=\"Type\"\n          onChange={(e) => setType(e.target.value)}\n        >\n          <MenuItem value=\"Multi-select\">Multi-select</MenuItem>\n          <MenuItem value=\"Single-select\">Single-select</MenuItem>\n        </Select>\n      </FormControl>\n      \n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={isRequired}\n            onChange={() => setIsRequired(!isRequired)}\n          />\n        }\n        label=\"A value is required\"\n      />\n    </div>\n  );\n}\n\nexport default TypeSelect;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAc,CAAC,EAAE;EAChE,oBACEL,OAAA;IAAAM,QAAA,gBACEN,OAAA,CAACR,WAAW;MAACe,SAAS;MAAAD,QAAA,gBACpBN,OAAA,CAACP,UAAU;QAACe,EAAE,EAAC,mBAAmB;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACpDZ,OAAA,CAACN,MAAM;QACLmB,OAAO,EAAC,mBAAmB;QAC3BL,EAAE,EAAC,aAAa;QAChBM,KAAK,EAAEZ,IAAK;QACZa,KAAK,EAAC,MAAM;QACZC,QAAQ,EAAGC,CAAC,IAAKd,OAAO,CAACc,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;QAAAR,QAAA,gBAEzCN,OAAA,CAACL,QAAQ;UAACmB,KAAK,EAAC,cAAc;UAAAR,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACtDZ,OAAA,CAACL,QAAQ;UAACmB,KAAK,EAAC,eAAe;UAAAR,QAAA,EAAC;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEdZ,OAAA,CAACH,gBAAgB;MACfsB,OAAO,eACLnB,OAAA,CAACJ,QAAQ;QACPwB,OAAO,EAAEhB,UAAW;QACpBY,QAAQ,EAAEA,CAAA,KAAMX,aAAa,CAAC,CAACD,UAAU;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CACF;MACDG,KAAK,EAAC;IAAqB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACS,EAAA,GA5BQpB,UAAU;AA8BnB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}