{"ast":null,"code":"var _jsxFileName = \"/Users/caofei/Documents/GitHub/-/quickbase/src/components/LoadingButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingButton = ({\n  isLoading,\n  children,\n  ...otherProps\n}) => {\n  _s();\n  const [loading, setLoading] = useState(isLoading);\n  const handleClick = () => {\n    setLoading(true);\n    // Simulate an API call and set loading to false after that.\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    disabled: loading,\n    onClick: handleClick,\n    ...otherProps,\n    children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 18\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(LoadingButton, \"diEMXkUQiH0veK8EROTRjDNBWVI=\");\n_c = LoadingButton;\nexport default LoadingButton;\nvar _c;\n$RefreshReg$(_c, \"LoadingButton\");","map":{"version":3,"names":["React","useState","Button","CircularProgress","jsxDEV","_jsxDEV","LoadingButton","isLoading","children","otherProps","_s","loading","setLoading","handleClick","setTimeout","variant","type","disabled","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/caofei/Documents/GitHub/-/quickbase/src/components/LoadingButton.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst LoadingButton = ({ isLoading, children, ...otherProps }) => {\n  const [loading, setLoading] = useState(isLoading);\n\n  const handleClick = () => {\n    setLoading(true);\n    // Simulate an API call and set loading to false after that.\n    setTimeout(() => {\n      setLoading(false);\n    }, 2000);\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      type=\"submit\"\n      disabled={loading}\n      onClick={handleClick}\n      {...otherProps}\n    >\n      {loading ? <CircularProgress size={24} /> : children}\n    </Button>\n  );\n};\n\nexport default LoadingButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,gBAAgB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,aAAa,GAAGA,CAAC;EAAEC,SAAS;EAAEC,QAAQ;EAAE,GAAGC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAACM,SAAS,CAAC;EAEjD,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBD,UAAU,CAAC,IAAI,CAAC;IAChB;IACAE,UAAU,CAAC,MAAM;MACfF,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEP,OAAA,CAACH,MAAM;IACLa,OAAO,EAAC,WAAW;IACnBC,IAAI,EAAC,QAAQ;IACbC,QAAQ,EAAEN,OAAQ;IAClBO,OAAO,EAAEL,WAAY;IAAA,GACjBJ,UAAU;IAAAD,QAAA,EAEbG,OAAO,gBAAGN,OAAA,CAACF,gBAAgB;MAACgB,IAAI,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAAGf;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEb,CAAC;AAACb,EAAA,CAtBIJ,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAwBnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}